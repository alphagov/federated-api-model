buildscript {
  dependencies {
    classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:1.1.1'
  }
}

plugins {
  id 'uk.gov.api.spring-boot-conventions'
}

apply plugin: 'jsonschema2pojo'

dependencies {
  implementation 'org.apache.logging.log4j:log4j-layout-template-json'
  implementation 'org.springframework.boot:spring-boot-starter-log4j2'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'me.jvt.uuid:uuid-core:0.7.0'
  implementation 'me.jvt.http:content-negotiation:1.1.0'
  implementation 'me.jvt.spring:spring-content-negotiator:0.1.0'
  testImplementation 'com.tngtech.archunit:archunit:0.22.0'
  testImplementation 'com.tngtech.archunit:archunit-junit5:0.22.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.rest-assured:json-schema-validator:4.5.0'
}

task copySchemas(type: Copy) {
  from '../../../schemas/v1alpha'
  include '*.json'
  into file("${project.buildDir}/resources/test/schemas/v1alpha")
}
processTestResources.finalizedBy copySchemas

jsonSchema2Pojo {
  source = files(fileTree(dir: '../../../schemas/v1alpha', include: ['*.json']))
  targetDirectory = file("${project.buildDir}/generated-sources/js2p")
  targetPackage = "uk.gov.api.models.metadata.v1alpha"
}

bootJar {
  archiveName = 'federated-api-model.jar'
}
